INSERT INTO public."Reservation"(
	"numR", arrive, depart, "numPass", "numC")
	VALUES (1,'27/04/2021','01/05/2021','hiu34', 1), (2,'27/04/2021','01/05/2021','HUHI78', 2), (3,'27/04/2021','01/05/2021','IUHIS89', 3);
	
	
	
	-- //First Function 
CREATE or replace FUNCTION chambresRéservées ()
RETURNS TABLE(numC int ,lits int,prix real) as $list$

BEGIN
    RETURN QUERY SELECT
     ch.*
    FROM
     "Chambre" AS ch,"Reservation" AS r
     WHERE ch."numC"=r."numC" AND EXTRACT(MONTH FROM r.depart) =8
	 GROUP BY ch."numC";
END; 
$list$ LANGUAGE 'plpgsql';


-- Function 2

CREATE or replace FUNCTION ListClient ()
RETURNS TABLE(numPass int ,nom varchar,ville varchar) as $list$

BEGIN
    RETURN QUERY SELECT
     cl.*
    FROM
     "Chambre" AS ch,"Reservation" AS r,"Clients" AS cl
     WHERE ch."numC"=r."numC" AND r."numPass" = cl."numPass" AND ch."prix">700
	 GROUP BY cl."numPass";
END; 
$list$ LANGUAGE 'plpgsql';

-- 

-- Function 3

CREATE or replace FUNCTION chambresRéservéesParClient ()
RETURNS TABLE(numC int ,lits int,prix real) as $list$

BEGIN
    RETURN QUERY SELECT
     ch.*
    FROM
     "Chambre" AS ch,"Reservation" AS r,"Clients" AS cl
     WHERE ch."numC"=r."numC" AND r."numPass" = cl."numPass" AND cl.nom Like'A%'
	 GROUP BY ch."numC";
END; 
$list$ LANGUAGE 'plpgsql';

-- 

-- 
-- FUNCTION 4
CREATE or replace FUNCTION clientsRéservées ()
RETURNS TABLE(numPass int ,nom varchar,ville varchar) as $list$

BEGIN
    RETURN QUERY SELECT 
     cl.*
    FROM
     "Chambre" AS ch,"Reservation" AS r,"Clients" AS cl
     WHERE ch."numC"= r."numC" AND r."numPass" = cl."numPass" 
	 GROUP BY cl."numPass"
	having count(ch."numC")>=2;
END; 
$list$ LANGUAGE 'plpgsql';


-- 

-- FUNCTION 5
CREATE or replace FUNCTION clientsHabitent ()
RETURNS TABLE(numPass int ,nom varchar,ville varchar) as $list$

BEGIN
    RETURN QUERY SELECT 
     cl.*
    FROM
     "Chambre" AS ch,"Reservation" AS r,"Clients" AS cl
     WHERE ch."numC"= r."numC" AND r."numPass" = cl."numPass" AND cl."ville"='Rabat' 
	 GROUP BY cl."numPass"
	having count(ch."numC")>2 AND count(r."numPass")>2 ;
END; 
$list$ LANGUAGE 'plpgsql';

-- 

-- PROCEDURE 6
create or replace procedure ModifierPrix()
language plpgsql    
as $update$
begin
    -- subtracting the amount from the sender's account 
    update "Chambre" 
    set prix = 1000 
    where prix >= 700;
end;$update$


-- PROCEDURE 7
create or replace procedure supprimerClient()
language plpgsql    
as $delete$
begin
    -- subtracting the amount from the sender's account 
    delete from "Clients" WHERE "Clients"."numPass" Not in(select "numPass" FROM "Reservation" );
end;$delete$

-- 

-- Procedure 8

create or replace procedure ModifierPrixPourLits()
language plpgsql    
as $updatePrice$
begin
    -- subtracting the amount from the sender's account 
    update "Chambre" 
    set prix = prix - 100
    where lits > 1;
end;$updatePrice$


CALL ModifierPrixPourLits()
CALL supprimerClient()
CALL ModifierPrix()
